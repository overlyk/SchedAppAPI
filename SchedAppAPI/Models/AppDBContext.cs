// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace SchedAppAPI.Models;

public partial class AppDBContext : DbContext
{
    public AppDBContext()
    {
    }

    public AppDBContext(DbContextOptions<AppDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Activity> Activity { get; set; }

    public virtual DbSet<Game> Game { get; set; }

    public virtual DbSet<Goal> Goal { get; set; }

    public virtual DbSet<Sport> Sport { get; set; }

    public virtual DbSet<Team> Team { get; set; }

    public virtual DbSet<User> User { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=schedapp.database.windows.net;Initial Catalog=AppDB;User ID=sadmin;Password=!T2y3g4h");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Activity>(entity =>
        {
            entity.Property(e => e.description).HasMaxLength(100);
            entity.Property(e => e.endtime).HasColumnType("datetime");
            entity.Property(e => e.location).HasMaxLength(50);
            entity.Property(e => e.name)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.starttime).HasColumnType("datetime");
        });

        modelBuilder.Entity<Game>(entity =>
        {
            entity.Property(e => e.endtime).HasColumnType("datetime");
            entity.Property(e => e.starttime).HasColumnType("datetime");
        });

        modelBuilder.Entity<Goal>(entity =>
        {
            entity.Property(e => e.description).HasMaxLength(100);
            entity.Property(e => e.name)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Sport>(entity =>
        {
            entity.Property(e => e.name).HasMaxLength(50);
        });

        modelBuilder.Entity<Team>(entity =>
        {
            entity.Property(e => e.name)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.Property(e => e.firstname)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.lastname)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.password)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.username)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}